/* TABLE TO STORE PORTS*/
CREATE TABLE TBL_MASTER_PORTS
(
PORT_ID NUMBER,
PORT_NAME VARCHAR2(25),
PORT_CODE VARCHAR2(25),
CONSTRAINT PID_PK PRIMARY KEY(PORT_ID)
);

INSERT ALL 
INTO TBL_MASTER_PORTS VALUES( 100,'CHENNAI','CHN123')
INTO TBL_MASTER_PORTS VALUES( 101,'MADURAI','MAD345')
INTO TBL_MASTER_PORTS VALUES( 102,'KOVAI','KOV567')
INTO TBL_MASTER_PORTS VALUES( 103,'NELLAI','NLI890')
INTO TBL_MASTER_PORTS VALUES( 104,'TRICHY','TCY321')
INTO TBL_MASTER_PORTS VALUES( 105,'SALEM','SLM543')
INTO TBL_MASTER_PORTS VALUES( 106,'ERODE','ERD765')
INTO TBL_MASTER_PORTS VALUES( 107,'KARUR','KUR145')
SELECT * FROM DUAL;

SELECT * FROM TBL_MASTER_PORTS;

/*TABLE TO STORE PORT GROUP NAME*/
CREATE TABLE TBL_PORT_GROUP
(
GROUP_ID NUMBER,
GROUP_NAME VARCHAR2(25),
GROUP_CREATED_BY NUMBER,
GROUP_CREATED_ON TIMESTAMP,
CONSTRAINT GRPID_PK PRIMARY KEY(GROUP_ID),
CONSTRAINT GRPCRTBY_FK FOREIGN KEY(GROUP_CREATED_BY)REFERENCES EMPLOYEES(EMPLOYEE_ID)
);

--ADDING CONSTRAINT TO EMPLOYYEES TABLE EMPLOYEE COLUMN NAME
ALTER TABLE EMPLOYEES ADD CONSTRAINT EIDPK PRIMARY KEY(EMPLOYEE_ID);

SELECT * FROM USER_CONSTRAINTS ;

--CREATING SEQUENCE NUMBER FOR GROUP_ID COLUMN
CREATE SEQUENCE SQGRPID START WITH 200 INCREMENT BY 1 NOMAXVALUE;

/*TABLE TO SPECIFY PORT UNDER WHICH GROUP*/
CREATE TABLE TBL_PORT_CHILD
(
CHILD_ID NUMBER,
GROUP_ID NUMBER,
PORT_ID NUMBER,
CONSTRAINT CHIDID_PK PRIMARY KEY(CHILD_ID),
CONSTRAINT GROPID_FK FOREIGN KEY(GROUP_ID) REFERENCES  TBL_PORT_GROUP(GROUP_ID),
CONSTRAINT PORTID_FK FOREIGN KEY(PORT_ID) REFERENCES  TBL_MASTER_PORTS(PORT_ID)
);

--CREATING SEQUENCE NUMBER FOR CHILD_ID COLUMN 
CREATE SEQUENCE SQCHL START WITH 300 INCREMENT BY 1 NOMAXVALUE;

/*PROCEDURE TO SPECIFY PORT NAME WITH PORT ID*/
CREATE OR REPLACE PROCEDURE SP_PORT_LIST(P_PORTS OUT SYS_REFCURSOR) AS 
BEGIN 
/*THS PROCEDURE WILL RETURN AVAILABLE PORTS*/
OPEN P_PORTS FOR SELECT PORT_ID, PORT_NAME FROM TBL_MASTER_PORTS;
END;
/

/*CREATING COLLECTION TYPE FOR P_PORTS BECAUSE IT HAS MULTIPLE RECORDS*/
CREATE OR REPLACE TYPE TYP_PORTS IS TABLE OF NUMBER;

/*TABLE FOR PORTS GROUP*/
CREATE OR REPLACE PROCEDURE SP_PORTS_GROUPING
(
P_USERID IN NUMBER,
P_GROUP_NAME IN VARCHAR2,
P_PORTS IN TYP_PORTS,
P_MSG OUT VARCHAR2
)AS
G NUMBER;
BEGIN
INSERT INTO TBL_PORT_GROUP 
VALUES(SQGRPID.NEXTVAL,P_GROUP_NAME, P_USERID, SYSTIMESTAMP) RETURNING GROUP_ID INTO G;
FOR I IN 1..P_PORTS.COUNT LOOP
INSERT INTO TBL_PORT_CHILD 
VALUES(SQCHL.NEXTVAL,G, P_PORTS(I));
END LOOP;
--INSERT INTO TBL_PORT_CHILD SELECT SQCHL.NEXTVAL,G,COLUMN_VALUES FROM TABLE (P_PORTS);
P_MSG:='GROUP CREATED';
COMMIT;
EXCEPTION
WHEN OTHERS THEN 
P_MSG:='GROUP CREATION FAILED';
END;
/

--TO EXECUTE
DECLARE
P TYP_PORTS:=TYP_PORTS(103,104,105);
M VARCHAR2(50);
BEGIN
SP_PORTS_GROUPING(101, 'EFG', P,M);
DBMS_OUTPUT.PUT_LINE(M);
END;
/
SELECT * FROM TBL_MASTER_PORTS;

SELECT * FROM TBL_PORT_GROUP;

SELECT * FROM TBL_PORT_CHILD;

/*******************************************************************************
********************************************************************************
*******************************************************************************/
/*TABLE FOR PORTS GROUP*/
CREATE OR REPLACE PROCEDURE SP_PORTS_GROUPING
(
P_USERID IN NUMBER,
P_GROUP_NAME IN VARCHAR2,
P_PORTS IN TYP_PORTS,
P_MSG OUT VARCHAR2
)AS
G NUMBER;
CNT NUMBER;
GRP VARCHAR2(25);
PRTCNT NUMBER;
USRPORTS VARCHAR2(25);
E EXCEPTION;
F EXCEPTION;

BEGIN
SELECT  COUNT(GROUP_NAME) INTO CNT FROM TBL_PORT_GROUP 
WHERE LOWER(GROUP_NAME)=LOWER(P_GROUP_NAME);
IF CNT=0 THEN 
    
    SELECT LISTAGG(COLUMN_VALUE,',')
    WITHIN GROUP(ORDER BY COLUMN_VALUE ASC) INTO USRPORTS
    FROM TABLE(P_PORTS);
    
    PRTCNT:=P_PORTS.COUNT;-- which port under which name is in tbl_port_child table
    
    /*SELECT COUNT(*) INTO PRTCNT FROM ( SELECT GROUP_ID, LISTAGG(PORT_ID,',')
    WITHIN GROUP(ORDER BY PORT_ID ASC) AS LSTPORTS FROM TBL_PORT_CHILD
    GROUP BY GROUP_ID 
    HAVING COUNT(PORT_ID)=PRTCNT )
    WHERE LSTPORTS=USRPORTS;
    
    IF PRTCNT!=0 THEN
        RAISE F;
    END IF;*/
        
    FOR J IN (SELECT GROUP_ID , LISTAGG(PORT_ID,',')
        WITHIN GROUP(ORDER BY PORT_ID ASC) AS LSTPORTS
        FROM TBL_PORT_CHILD GROUP BY GROUP_ID
        HAVING COUNT(PORT_ID)=PRTCNT) LOOP
        
        IF USRPORTS=J.LSTPORTS THEN
            SELECT GROUP_NAME INTO GRP FROM TBL_PORT_GROUP
            WHERE GROUP_ID =J.GROUP_ID;
            RAISE F;
        END IF;
    END LOOP;
    
    INSERT INTO TBL_PORT_GROUP 
    VALUES(SQGRPID.NEXTVAL,P_GROUP_NAME, P_USERID, SYSTIMESTAMP) RETURNING GROUP_ID INTO G;
    FOR I IN 1..P_PORTS.COUNT LOOP
        INSERT INTO TBL_PORT_CHILD 
        VALUES(SQCHL.NEXTVAL,G, P_PORTS(I));
    END LOOP;
    --INSERT INTO TBL_PORT_CHILD SELECT SQCHL.NEXTVAL,G,COLUMN_VALUES FROM TABLE (P_PORTS);
    P_MSG:='GROUP CREATED';
    COMMIT;
ELSIF CNT!=0 THEN 
    RAISE E;
   END IF;
EXCEPTION
WHEN E THEN 
    P_MSG:='GROUP CREATION FAILED BECAUSE SAME NAME EXISTS';
WHEN F THEN
    P_MSG:='GROUP CREATION FAILED BECAUSE SAME PORTS EXISTS'||GRP;
END;
/

--TO EXECUTE
DECLARE
P TYP_PORTS:=TYP_PORTS(102,103,101);
M VARCHAR2(50);
BEGIN
SP_PORTS_GROUPING(108, 'GROUP7', P,M);
DBMS_OUTPUT.PUT_LINE(M);
END;
/

SELECT * FROM TBL_MASTER_PORTS;

SELECT * FROM TBL_PORT_GROUP;

SELECT * FROM TBL_PORT_CHILD;

/*PROCEDURE TO DISPLAY GROUP NAME WITH PORT NAMES ON THE SCREEN */
CREATE OR REPLACE PROCEDURE SP_GROUP_DETAILS
(
P_USERID IN NUMBER,
P_DETAILS OUT SYS_REFCURSOR
)AS
BEGIN
    OPEN P_DETAILS FOR SELECT GROUP_NAME,
    LISTAGG(PORT_NAME,',') WITHIN GROUP( ORDER BY PORT_NAME ) AS PORTS
    FROM TBL_PORT_GROUP A, TBL_MASTER_PORTS B , TBL_PORT_CHILD C
    WHERE A.GROUP_ID=C.GROUP_ID AND B.PORT_ID=C.PORT_ID
    AND A.GROUP_CREATED_BY =P_USERID
    GROUP BY GROUP_NAME;
   
END;
/

--To Execute
VARIABLE A REFCURSOR;
EXEC SP_GROUP_DETAILS(100,:A);
